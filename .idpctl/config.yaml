global:
  namespace: idp-system
  storageClass: idp-sc
  port: 5103
  ingress:
    host: api-idp.choigonyok.com
    port: 8080
    tls: false
  git:
    username: choigonyok
    email : achoistic98@naver.com
    token: xxxxxxxx
    repository: test1256
    oauth:
      clientId: xxxxxxxx
      clientSecret: xxxxxxxx
  adminPassword: tester1234
  harbor:
    host: ci.choigonyok.com
    port: 8080
    tls: false
  ui:
    host: idp.choigonyok.com
    port: 8080
    tls: false
  storage:
    # type: postgresql
    username: tester
    password: tester1234
    database: home-idp
    # port: 5432

secret-manager:
  enabled: true
  replicas: 3
  service:
    port: 5103
  storage:
    type: postgresql
    host: localhost
    username: tester
    password: tester1234
    database: idp
    port: 5432

deploy-manager:
  enabled: true
  replicas: 3
  service:
    port: 5104
  docker:
    host: localhost
    username: tester
    password: tester1234

webhook-manager:
  enabled: true
  replicas: 3
  service:
    port: 5108
  
rbac-manager:
  enabled: true
  replicas: 3
  service:
    port: 5105
  storage:
    type: postgresql
    host: localhost
    username: tester
    password: tester1234
    database: idp
    port: 5432
  admin:
    username: choigonyok
    password: tester1234
    email: test@naver.com
  smtp:
    enabled: true
    config:
      host: "127.0.0.1"
      port: 1587
      user: idp@choigonyok.com
      password: tester1234

trace-manager:
  enabled: true
  replicas: 3
  service:
    port: 5105
  storage:
    type: postgresql
    host: localhost
    username: tester
    password: tester1234
    database: idp
    port: 5432
  admin:
    username: choigonyok
    password: tester1234
    email: test@naver.com
  smtp:
    enabled: true
    config:
      host: "127.0.0.1"
      port: 1587
      user: idp@choigonyok.com
      password: tester1234

gateway:
  enabled: true
  replicas: 3
  service:
    port: 5106
    type: ClusterIP
  
install-manager:
  enabled: true
  replicas: 3
  harbor:
    host: ci.choigonyok.com
  service:
    port: 5051
  docker:
    host: localhost
  defaultRegistry:
    enabled: true
    type: harbor # available values: harbor, docker-registry
    adminPassword: tester1234 # username is 'admin'
    persistent:
      enabled: false
      size: 10Gi
  defaultCD:
    enabled: true
    type: argocd # available values: argocd
    adminPassword: tester1234 # username is 'admin'
    persistent:
      enabled: false
      size: 10Gi
  defaultCI:
    enabled: true
    type: jeknins # available values: jenkins
    adminPassword: tester1234 # username is 'admin'
    persistent:
      enabled: false
      size: 10Gi