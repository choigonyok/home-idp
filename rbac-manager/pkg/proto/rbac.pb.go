// protoc --go_out=rbac-manager/pkg/proto --go-grpc_out=rbac-manager/pkg/proto rbac-manager/pkg/proto/rbac.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.25.1
// source: rbac-manager/pkg/proto/rbac.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Action int32

const (
	Action_CREATE   Action = 0
	Action_RETRIEVE Action = 1
	Action_UPDATE   Action = 2
	Action_DELETE   Action = 3
)

// Enum value maps for Action.
var (
	Action_name = map[int32]string{
		0: "CREATE",
		1: "RETRIEVE",
		2: "UPDATE",
		3: "DELETE",
	}
	Action_value = map[string]int32{
		"CREATE":   0,
		"RETRIEVE": 1,
		"UPDATE":   2,
		"DELETE":   3,
	}
)

func (x Action) Enum() *Action {
	p := new(Action)
	*p = x
	return p
}

func (x Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Action) Descriptor() protoreflect.EnumDescriptor {
	return file_rbac_manager_pkg_proto_rbac_proto_enumTypes[0].Descriptor()
}

func (Action) Type() protoreflect.EnumType {
	return &file_rbac_manager_pkg_proto_rbac_proto_enumTypes[0]
}

func (x Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Action.Descriptor instead.
func (Action) EnumDescriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{0}
}

type Result int32

const (
	Result_ASK   Result = 0
	Result_ALLOW Result = 1
	Result_DENY  Result = 2
	Result_ERROR Result = 3
)

// Enum value maps for Result.
var (
	Result_name = map[int32]string{
		0: "ASK",
		1: "ALLOW",
		2: "DENY",
		3: "ERROR",
	}
	Result_value = map[string]int32{
		"ASK":   0,
		"ALLOW": 1,
		"DENY":  2,
		"ERROR": 3,
	}
)

func (x Result) Enum() *Result {
	p := new(Result)
	*p = x
	return p
}

func (x Result) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Result) Descriptor() protoreflect.EnumDescriptor {
	return file_rbac_manager_pkg_proto_rbac_proto_enumTypes[1].Descriptor()
}

func (Result) Type() protoreflect.EnumType {
	return &file_rbac_manager_pkg_proto_rbac_proto_enumTypes[1]
}

func (x Result) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Result.Descriptor instead.
func (Result) EnumDescriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{1}
}

type GetTraceIdByDockerfileIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DockerfileId string `protobuf:"bytes,1,opt,name=dockerfile_id,json=dockerfileId,proto3" json:"dockerfile_id,omitempty"`
}

func (x *GetTraceIdByDockerfileIdRequest) Reset() {
	*x = GetTraceIdByDockerfileIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraceIdByDockerfileIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceIdByDockerfileIdRequest) ProtoMessage() {}

func (x *GetTraceIdByDockerfileIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceIdByDockerfileIdRequest.ProtoReflect.Descriptor instead.
func (*GetTraceIdByDockerfileIdRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{0}
}

func (x *GetTraceIdByDockerfileIdRequest) GetDockerfileId() string {
	if x != nil {
		return x.DockerfileId
	}
	return ""
}

type GetTraceIdByDockerfileIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *GetTraceIdByDockerfileIdReply) Reset() {
	*x = GetTraceIdByDockerfileIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraceIdByDockerfileIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceIdByDockerfileIdReply) ProtoMessage() {}

func (x *GetTraceIdByDockerfileIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceIdByDockerfileIdReply.ProtoReflect.Descriptor instead.
func (*GetTraceIdByDockerfileIdReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{1}
}

func (x *GetTraceIdByDockerfileIdReply) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type GetTraceIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageName    string `protobuf:"bytes,1,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ImageVersion string `protobuf:"bytes,2,opt,name=image_version,json=imageVersion,proto3" json:"image_version,omitempty"`
}

func (x *GetTraceIdRequest) Reset() {
	*x = GetTraceIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraceIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceIdRequest) ProtoMessage() {}

func (x *GetTraceIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceIdRequest.ProtoReflect.Descriptor instead.
func (*GetTraceIdRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{2}
}

func (x *GetTraceIdRequest) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *GetTraceIdRequest) GetImageVersion() string {
	if x != nil {
		return x.ImageVersion
	}
	return ""
}

type GetTraceIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    string `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
}

func (x *GetTraceIdReply) Reset() {
	*x = GetTraceIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTraceIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTraceIdReply) ProtoMessage() {}

func (x *GetTraceIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTraceIdReply.ProtoReflect.Descriptor instead.
func (*GetTraceIdReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{3}
}

func (x *GetTraceIdReply) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *GetTraceIdReply) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

type RbacRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Target   string `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Action   Action `protobuf:"varint,3,opt,name=action,proto3,enum=proto.Action" json:"action,omitempty"`
}

func (x *RbacRequest) Reset() {
	*x = RbacRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacRequest) ProtoMessage() {}

func (x *RbacRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacRequest.ProtoReflect.Descriptor instead.
func (*RbacRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{4}
}

func (x *RbacRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RbacRequest) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *RbacRequest) GetAction() Action {
	if x != nil {
		return x.Action
	}
	return Action_CREATE
}

type RbacReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result Result `protobuf:"varint,1,opt,name=result,proto3,enum=proto.Result" json:"result,omitempty"`
}

func (x *RbacReply) Reset() {
	*x = RbacReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RbacReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RbacReply) ProtoMessage() {}

func (x *RbacReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RbacReply.ProtoReflect.Descriptor instead.
func (*RbacReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{5}
}

func (x *RbacReply) GetResult() Result {
	if x != nil {
		return x.Result
	}
	return Result_ASK
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime string `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{6}
}

func (x *Role) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

type PostProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string  `protobuf:"bytes,1,opt,name=projectName,proto3" json:"projectName,omitempty"`
	CreatorId   float64 `protobuf:"fixed64,2,opt,name=creatorId,proto3" json:"creatorId,omitempty"`
}

func (x *PostProjectRequest) Reset() {
	*x = PostProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProjectRequest) ProtoMessage() {}

func (x *PostProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProjectRequest.ProtoReflect.Descriptor instead.
func (*PostProjectRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{7}
}

func (x *PostProjectRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *PostProjectRequest) GetCreatorId() float64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

type PostProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PostProjectReply) Reset() {
	*x = PostProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostProjectReply) ProtoMessage() {}

func (x *PostProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostProjectReply.ProtoReflect.Descriptor instead.
func (*PostProjectReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{8}
}

type GetRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRolesRequest) Reset() {
	*x = GetRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesRequest) ProtoMessage() {}

func (x *GetRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesRequest.ProtoReflect.Descriptor instead.
func (*GetRolesRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{9}
}

type RolePolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   *Role     `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Policy []*Policy `protobuf:"bytes,2,rep,name=policy,proto3" json:"policy,omitempty"`
}

func (x *RolePolicy) Reset() {
	*x = RolePolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RolePolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RolePolicy) ProtoMessage() {}

func (x *RolePolicy) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RolePolicy.ProtoReflect.Descriptor instead.
func (*RolePolicy) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{10}
}

func (x *RolePolicy) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RolePolicy) GetPolicy() []*Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetRolesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RolePolicies []*RolePolicy `protobuf:"bytes,1,rep,name=rolePolicies,proto3" json:"rolePolicies,omitempty"`
}

func (x *GetRolesReply) Reset() {
	*x = GetRolesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesReply) ProtoMessage() {}

func (x *GetRolesReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesReply.ProtoReflect.Descriptor instead.
func (*GetRolesReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{11}
}

func (x *GetRolesReply) GetRolePolicies() []*RolePolicy {
	if x != nil {
		return x.RolePolicies
	}
	return nil
}

type GetRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *GetRoleRequest) Reset() {
	*x = GetRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleRequest) ProtoMessage() {}

func (x *GetRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleRequest.ProtoReflect.Descriptor instead.
func (*GetRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{12}
}

func (x *GetRoleRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GetRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role *Role `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *GetRoleReply) Reset() {
	*x = GetRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoleReply) ProtoMessage() {}

func (x *GetRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoleReply.ProtoReflect.Descriptor instead.
func (*GetRoleReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{13}
}

func (x *GetRoleReply) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

type Policy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Json string `protobuf:"bytes,3,opt,name=json,proto3" json:"json,omitempty"`
}

func (x *Policy) Reset() {
	*x = Policy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Policy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Policy) ProtoMessage() {}

func (x *Policy) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Policy.ProtoReflect.Descriptor instead.
func (*Policy) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{14}
}

func (x *Policy) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Policy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Policy) GetJson() string {
	if x != nil {
		return x.Json
	}
	return ""
}

type GetPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId string `protobuf:"bytes,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetPolicyRequest) Reset() {
	*x = GetPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyRequest) ProtoMessage() {}

func (x *GetPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{15}
}

func (x *GetPolicyRequest) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type GetPolicyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *GetPolicyReply) Reset() {
	*x = GetPolicyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyReply) ProtoMessage() {}

func (x *GetPolicyReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyReply.ProtoReflect.Descriptor instead.
func (*GetPolicyReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{16}
}

func (x *GetPolicyReply) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type GetPoliciesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*Policy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *GetPoliciesReply) Reset() {
	*x = GetPoliciesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoliciesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliciesReply) ProtoMessage() {}

func (x *GetPoliciesReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliciesReply.ProtoReflect.Descriptor instead.
func (*GetPoliciesReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{17}
}

func (x *GetPoliciesReply) GetPolicies() []*Policy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreatorId string `protobuf:"bytes,3,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{18}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

type GetProjectsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
}

func (x *GetProjectsReply) Reset() {
	*x = GetProjectsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectsReply) ProtoMessage() {}

func (x *GetProjectsReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectsReply.ProtoReflect.Descriptor instead.
func (*GetProjectsReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{19}
}

func (x *GetProjectsReply) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          float64 `protobuf:"fixed64,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RoleId      string  `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName    string  `protobuf:"bytes,4,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	CreateTime  string  `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	ProjectName string  `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{20}
}

func (x *User) GetId() float64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

func (x *User) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *User) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *User) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type GetUsersInProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectName string `protobuf:"bytes,1,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *GetUsersInProjectRequest) Reset() {
	*x = GetUsersInProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInProjectRequest) ProtoMessage() {}

func (x *GetUsersInProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInProjectRequest.ProtoReflect.Descriptor instead.
func (*GetUsersInProjectRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{21}
}

func (x *GetUsersInProjectRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type GetUsersInProjectReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *GetUsersInProjectReply) Reset() {
	*x = GetUsersInProjectReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersInProjectReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersInProjectReply) ProtoMessage() {}

func (x *GetUsersInProjectReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersInProjectReply.ProtoReflect.Descriptor instead.
func (*GetUsersInProjectReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{22}
}

func (x *GetUsersInProjectReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid float64 `protobuf:"fixed64,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{23}
}

func (x *GetUsersRequest) GetUid() float64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUsersReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users      []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	StatusCode int32   `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
}

func (x *GetUsersReply) Reset() {
	*x = GetUsersReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersReply) ProtoMessage() {}

func (x *GetUsersReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersReply.ProtoReflect.Descriptor instead.
func (*GetUsersReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{24}
}

func (x *GetUsersReply) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *GetUsersReply) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

type PostUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        *User  `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=projectName,proto3" json:"projectName,omitempty"`
}

func (x *PostUserRequest) Reset() {
	*x = PostUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostUserRequest) ProtoMessage() {}

func (x *PostUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostUserRequest.ProtoReflect.Descriptor instead.
func (*PostUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{25}
}

func (x *PostUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *PostUserRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{26}
}

func (x *Error) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type PutUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	User   *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *PutUserRequest) Reset() {
	*x = PutUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserRequest) ProtoMessage() {}

func (x *PutUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserRequest.ProtoReflect.Descriptor instead.
func (*PutUserRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{27}
}

func (x *PutUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *PutUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type PutUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PutUserReply) Reset() {
	*x = PutUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutUserReply) ProtoMessage() {}

func (x *PutUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutUserReply.ProtoReflect.Descriptor instead.
func (*PutUserReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{28}
}

func (x *PutUserReply) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PostRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleName string `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *PostRoleRequest) Reset() {
	*x = PostRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostRoleRequest) ProtoMessage() {}

func (x *PostRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostRoleRequest.ProtoReflect.Descriptor instead.
func (*PostRoleRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{29}
}

func (x *PostRoleRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type Dockerfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ImageName    string  `protobuf:"bytes,2,opt,name=image_name,json=imageName,proto3" json:"image_name,omitempty"`
	ImageVersion string  `protobuf:"bytes,3,opt,name=image_version,json=imageVersion,proto3" json:"image_version,omitempty"`
	CreatorId    float64 `protobuf:"fixed64,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Repository   string  `protobuf:"bytes,5,opt,name=repository,proto3" json:"repository,omitempty"`
	Content      string  `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	TraceId      string  `protobuf:"bytes,7,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
}

func (x *Dockerfile) Reset() {
	*x = Dockerfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dockerfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dockerfile) ProtoMessage() {}

func (x *Dockerfile) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dockerfile.ProtoReflect.Descriptor instead.
func (*Dockerfile) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{30}
}

func (x *Dockerfile) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Dockerfile) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *Dockerfile) GetImageVersion() string {
	if x != nil {
		return x.ImageVersion
	}
	return ""
}

func (x *Dockerfile) GetCreatorId() float64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *Dockerfile) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *Dockerfile) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Dockerfile) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

type GetDockerfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *GetDockerfilesRequest) Reset() {
	*x = GetDockerfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDockerfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDockerfilesRequest) ProtoMessage() {}

func (x *GetDockerfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDockerfilesRequest.ProtoReflect.Descriptor instead.
func (*GetDockerfilesRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{31}
}

func (x *GetDockerfilesRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GetDockerfilesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dockerfiles []*Dockerfile `protobuf:"bytes,1,rep,name=dockerfiles,proto3" json:"dockerfiles,omitempty"`
}

func (x *GetDockerfilesReply) Reset() {
	*x = GetDockerfilesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDockerfilesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDockerfilesReply) ProtoMessage() {}

func (x *GetDockerfilesReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDockerfilesReply.ProtoReflect.Descriptor instead.
func (*GetDockerfilesReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{32}
}

func (x *GetDockerfilesReply) GetDockerfiles() []*Dockerfile {
	if x != nil {
		return x.Dockerfiles
	}
	return nil
}

type PostDockerfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dockerfile *Dockerfile `protobuf:"bytes,1,opt,name=dockerfile,proto3" json:"dockerfile,omitempty"`
}

func (x *PostDockerfileRequest) Reset() {
	*x = PostDockerfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostDockerfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostDockerfileRequest) ProtoMessage() {}

func (x *PostDockerfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostDockerfileRequest.ProtoReflect.Descriptor instead.
func (*PostDockerfileRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{33}
}

func (x *PostDockerfileRequest) GetDockerfile() *Dockerfile {
	if x != nil {
		return x.Dockerfile
	}
	return nil
}

type PostPolicyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *PostPolicyRequest) Reset() {
	*x = PostPolicyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostPolicyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostPolicyRequest) ProtoMessage() {}

func (x *PostPolicyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostPolicyRequest.ProtoReflect.Descriptor instead.
func (*PostPolicyRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{34}
}

func (x *PostPolicyRequest) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type GetPolicyJsonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PolicyId string `protobuf:"bytes,1,opt,name=policy_id,json=policyId,proto3" json:"policy_id,omitempty"`
}

func (x *GetPolicyJsonRequest) Reset() {
	*x = GetPolicyJsonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyJsonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyJsonRequest) ProtoMessage() {}

func (x *GetPolicyJsonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyJsonRequest.ProtoReflect.Descriptor instead.
func (*GetPolicyJsonRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{35}
}

func (x *GetPolicyJsonRequest) GetPolicyId() string {
	if x != nil {
		return x.PolicyId
	}
	return ""
}

type GetPolicyJsonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *Policy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *GetPolicyJsonReply) Reset() {
	*x = GetPolicyJsonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPolicyJsonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPolicyJsonReply) ProtoMessage() {}

func (x *GetPolicyJsonReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPolicyJsonReply.ProtoReflect.Descriptor instead.
func (*GetPolicyJsonReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{36}
}

func (x *GetPolicyJsonReply) GetPolicy() *Policy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type IsUserExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId float64 `protobuf:"fixed64,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IsUserExistRequest) Reset() {
	*x = IsUserExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserExistRequest) ProtoMessage() {}

func (x *IsUserExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserExistRequest.ProtoReflect.Descriptor instead.
func (*IsUserExistRequest) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{37}
}

func (x *IsUserExistRequest) GetUserId() float64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type IsUserExistReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Found bool `protobuf:"varint,1,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *IsUserExistReply) Reset() {
	*x = IsUserExistReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserExistReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserExistReply) ProtoMessage() {}

func (x *IsUserExistReply) ProtoReflect() protoreflect.Message {
	mi := &file_rbac_manager_pkg_proto_rbac_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserExistReply.ProtoReflect.Descriptor instead.
func (*IsUserExistReply) Descriptor() ([]byte, []int) {
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP(), []int{38}
}

func (x *IsUserExistReply) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

var File_rbac_manager_pkg_proto_rbac_proto protoreflect.FileDescriptor

var file_rbac_manager_pkg_proto_rbac_proto_rawDesc = []byte{
	0x0a, 0x21, 0x72, 0x62, 0x61, 0x63, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x62, 0x61, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x46, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x79, 0x22, 0x68, 0x0a, 0x0b, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x32, 0x0a, 0x09,
	0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x4b, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x54, 0x0a,
	0x12, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x52, 0x6f,
	0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x22, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x35, 0x0a, 0x0c, 0x72, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0c, 0x72, 0x6f, 0x6c, 0x65,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x40, 0x0a, 0x06, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x22, 0x3d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x69, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x22, 0xa4, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x21, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x54, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x49, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x32, 0x0a,
	0x0c, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x22, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x2e, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xd4, 0x01, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0b, 0x64,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x15, 0x50, 0x6f,
	0x73, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x0a, 0x64, 0x6f, 0x63, 0x6b,
	0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3a, 0x0a, 0x11, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x22, 0x33, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4a,
	0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x25, 0x0a,
	0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x06, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x22, 0x2d, 0x0a, 0x12, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x10, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2a, 0x3a, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56, 0x45, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x31, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x53, 0x4b, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x4e, 0x59, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x32, 0x9b, 0x0a, 0x0a,
	0x0b, 0x52, 0x62, 0x61, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x62,
	0x61, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x62, 0x61, 0x63, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x40, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x4a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x50,
	0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x75, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65,
	0x72, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x48, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6f, 0x73,
	0x74, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x6a,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44, 0x6f,
	0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44,
	0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x42, 0x79, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rbac_manager_pkg_proto_rbac_proto_rawDescOnce sync.Once
	file_rbac_manager_pkg_proto_rbac_proto_rawDescData = file_rbac_manager_pkg_proto_rbac_proto_rawDesc
)

func file_rbac_manager_pkg_proto_rbac_proto_rawDescGZIP() []byte {
	file_rbac_manager_pkg_proto_rbac_proto_rawDescOnce.Do(func() {
		file_rbac_manager_pkg_proto_rbac_proto_rawDescData = protoimpl.X.CompressGZIP(file_rbac_manager_pkg_proto_rbac_proto_rawDescData)
	})
	return file_rbac_manager_pkg_proto_rbac_proto_rawDescData
}

var file_rbac_manager_pkg_proto_rbac_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rbac_manager_pkg_proto_rbac_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_rbac_manager_pkg_proto_rbac_proto_goTypes = []any{
	(Action)(0),                             // 0: proto.Action
	(Result)(0),                             // 1: proto.Result
	(*GetTraceIdByDockerfileIdRequest)(nil), // 2: proto.GetTraceIdByDockerfileIdRequest
	(*GetTraceIdByDockerfileIdReply)(nil),   // 3: proto.GetTraceIdByDockerfileIdReply
	(*GetTraceIdRequest)(nil),               // 4: proto.GetTraceIdRequest
	(*GetTraceIdReply)(nil),                 // 5: proto.GetTraceIdReply
	(*RbacRequest)(nil),                     // 6: proto.RbacRequest
	(*RbacReply)(nil),                       // 7: proto.RbacReply
	(*Role)(nil),                            // 8: proto.Role
	(*PostProjectRequest)(nil),              // 9: proto.PostProjectRequest
	(*PostProjectReply)(nil),                // 10: proto.PostProjectReply
	(*GetRolesRequest)(nil),                 // 11: proto.GetRolesRequest
	(*RolePolicy)(nil),                      // 12: proto.RolePolicy
	(*GetRolesReply)(nil),                   // 13: proto.GetRolesReply
	(*GetRoleRequest)(nil),                  // 14: proto.GetRoleRequest
	(*GetRoleReply)(nil),                    // 15: proto.GetRoleReply
	(*Policy)(nil),                          // 16: proto.Policy
	(*GetPolicyRequest)(nil),                // 17: proto.GetPolicyRequest
	(*GetPolicyReply)(nil),                  // 18: proto.GetPolicyReply
	(*GetPoliciesReply)(nil),                // 19: proto.GetPoliciesReply
	(*Project)(nil),                         // 20: proto.Project
	(*GetProjectsReply)(nil),                // 21: proto.GetProjectsReply
	(*User)(nil),                            // 22: proto.User
	(*GetUsersInProjectRequest)(nil),        // 23: proto.GetUsersInProjectRequest
	(*GetUsersInProjectReply)(nil),          // 24: proto.GetUsersInProjectReply
	(*GetUsersRequest)(nil),                 // 25: proto.GetUsersRequest
	(*GetUsersReply)(nil),                   // 26: proto.GetUsersReply
	(*PostUserRequest)(nil),                 // 27: proto.PostUserRequest
	(*Error)(nil),                           // 28: proto.Error
	(*PutUserRequest)(nil),                  // 29: proto.PutUserRequest
	(*PutUserReply)(nil),                    // 30: proto.PutUserReply
	(*PostRoleRequest)(nil),                 // 31: proto.PostRoleRequest
	(*Dockerfile)(nil),                      // 32: proto.Dockerfile
	(*GetDockerfilesRequest)(nil),           // 33: proto.GetDockerfilesRequest
	(*GetDockerfilesReply)(nil),             // 34: proto.GetDockerfilesReply
	(*PostDockerfileRequest)(nil),           // 35: proto.PostDockerfileRequest
	(*PostPolicyRequest)(nil),               // 36: proto.PostPolicyRequest
	(*GetPolicyJsonRequest)(nil),            // 37: proto.GetPolicyJsonRequest
	(*GetPolicyJsonReply)(nil),              // 38: proto.GetPolicyJsonReply
	(*IsUserExistRequest)(nil),              // 39: proto.IsUserExistRequest
	(*IsUserExistReply)(nil),                // 40: proto.IsUserExistReply
	(*emptypb.Empty)(nil),                   // 41: google.protobuf.Empty
}
var file_rbac_manager_pkg_proto_rbac_proto_depIdxs = []int32{
	0,  // 0: proto.RbacRequest.action:type_name -> proto.Action
	1,  // 1: proto.RbacReply.result:type_name -> proto.Result
	8,  // 2: proto.RolePolicy.role:type_name -> proto.Role
	16, // 3: proto.RolePolicy.policy:type_name -> proto.Policy
	12, // 4: proto.GetRolesReply.rolePolicies:type_name -> proto.RolePolicy
	8,  // 5: proto.GetRoleReply.role:type_name -> proto.Role
	16, // 6: proto.GetPolicyReply.policies:type_name -> proto.Policy
	16, // 7: proto.GetPoliciesReply.policies:type_name -> proto.Policy
	20, // 8: proto.GetProjectsReply.projects:type_name -> proto.Project
	22, // 9: proto.GetUsersInProjectReply.users:type_name -> proto.User
	22, // 10: proto.GetUsersReply.users:type_name -> proto.User
	22, // 11: proto.PostUserRequest.user:type_name -> proto.User
	22, // 12: proto.PutUserRequest.user:type_name -> proto.User
	28, // 13: proto.PutUserReply.error:type_name -> proto.Error
	32, // 14: proto.GetDockerfilesReply.dockerfiles:type_name -> proto.Dockerfile
	32, // 15: proto.PostDockerfileRequest.dockerfile:type_name -> proto.Dockerfile
	16, // 16: proto.PostPolicyRequest.policy:type_name -> proto.Policy
	16, // 17: proto.GetPolicyJsonReply.policy:type_name -> proto.Policy
	6,  // 18: proto.RbacService.Check:input_type -> proto.RbacRequest
	41, // 19: proto.RbacService.GetRoles:input_type -> google.protobuf.Empty
	14, // 20: proto.RbacService.GetRole:input_type -> proto.GetRoleRequest
	31, // 21: proto.RbacService.PostRole:input_type -> proto.PostRoleRequest
	36, // 22: proto.RbacService.PostPolicy:input_type -> proto.PostPolicyRequest
	17, // 23: proto.RbacService.GetPolicy:input_type -> proto.GetPolicyRequest
	41, // 24: proto.RbacService.GetPolicies:input_type -> google.protobuf.Empty
	37, // 25: proto.RbacService.GetPolicyJson:input_type -> proto.GetPolicyJsonRequest
	41, // 26: proto.RbacService.GetProjects:input_type -> google.protobuf.Empty
	23, // 27: proto.RbacService.GetUsersInProject:input_type -> proto.GetUsersInProjectRequest
	25, // 28: proto.RbacService.GetUsers:input_type -> proto.GetUsersRequest
	39, // 29: proto.RbacService.IsUserExist:input_type -> proto.IsUserExistRequest
	27, // 30: proto.RbacService.PostUser:input_type -> proto.PostUserRequest
	9,  // 31: proto.RbacService.PostProject:input_type -> proto.PostProjectRequest
	29, // 32: proto.RbacService.PutUser:input_type -> proto.PutUserRequest
	33, // 33: proto.RbacService.GetDockerfiles:input_type -> proto.GetDockerfilesRequest
	35, // 34: proto.RbacService.PostDockerfile:input_type -> proto.PostDockerfileRequest
	4,  // 35: proto.RbacService.GetTraceId:input_type -> proto.GetTraceIdRequest
	2,  // 36: proto.RbacService.GetTraceIdByDockerfileId:input_type -> proto.GetTraceIdByDockerfileIdRequest
	7,  // 37: proto.RbacService.Check:output_type -> proto.RbacReply
	13, // 38: proto.RbacService.GetRoles:output_type -> proto.GetRolesReply
	15, // 39: proto.RbacService.GetRole:output_type -> proto.GetRoleReply
	41, // 40: proto.RbacService.PostRole:output_type -> google.protobuf.Empty
	41, // 41: proto.RbacService.PostPolicy:output_type -> google.protobuf.Empty
	18, // 42: proto.RbacService.GetPolicy:output_type -> proto.GetPolicyReply
	19, // 43: proto.RbacService.GetPolicies:output_type -> proto.GetPoliciesReply
	38, // 44: proto.RbacService.GetPolicyJson:output_type -> proto.GetPolicyJsonReply
	21, // 45: proto.RbacService.GetProjects:output_type -> proto.GetProjectsReply
	24, // 46: proto.RbacService.GetUsersInProject:output_type -> proto.GetUsersInProjectReply
	26, // 47: proto.RbacService.GetUsers:output_type -> proto.GetUsersReply
	40, // 48: proto.RbacService.IsUserExist:output_type -> proto.IsUserExistReply
	41, // 49: proto.RbacService.PostUser:output_type -> google.protobuf.Empty
	10, // 50: proto.RbacService.PostProject:output_type -> proto.PostProjectReply
	30, // 51: proto.RbacService.PutUser:output_type -> proto.PutUserReply
	34, // 52: proto.RbacService.GetDockerfiles:output_type -> proto.GetDockerfilesReply
	41, // 53: proto.RbacService.PostDockerfile:output_type -> google.protobuf.Empty
	5,  // 54: proto.RbacService.GetTraceId:output_type -> proto.GetTraceIdReply
	3,  // 55: proto.RbacService.GetTraceIdByDockerfileId:output_type -> proto.GetTraceIdByDockerfileIdReply
	37, // [37:56] is the sub-list for method output_type
	18, // [18:37] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_rbac_manager_pkg_proto_rbac_proto_init() }
func file_rbac_manager_pkg_proto_rbac_proto_init() {
	if File_rbac_manager_pkg_proto_rbac_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetTraceIdByDockerfileIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetTraceIdByDockerfileIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetTraceIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetTraceIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RbacRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*RbacReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PostProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*PostProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*RolePolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetRolesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*Policy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetPoliciesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetProjectsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersInProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersInProjectReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*GetUsersReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*PostUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*PutUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*PutUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*PostRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*Dockerfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*GetDockerfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetDockerfilesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*PostDockerfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*PostPolicyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyJsonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetPolicyJsonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*IsUserExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rbac_manager_pkg_proto_rbac_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*IsUserExistReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rbac_manager_pkg_proto_rbac_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rbac_manager_pkg_proto_rbac_proto_goTypes,
		DependencyIndexes: file_rbac_manager_pkg_proto_rbac_proto_depIdxs,
		EnumInfos:         file_rbac_manager_pkg_proto_rbac_proto_enumTypes,
		MessageInfos:      file_rbac_manager_pkg_proto_rbac_proto_msgTypes,
	}.Build()
	File_rbac_manager_pkg_proto_rbac_proto = out.File
	file_rbac_manager_pkg_proto_rbac_proto_rawDesc = nil
	file_rbac_manager_pkg_proto_rbac_proto_goTypes = nil
	file_rbac_manager_pkg_proto_rbac_proto_depIdxs = nil
}
