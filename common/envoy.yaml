apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: idp-system
data:
  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_inbound
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 10000
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: inbound
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/proto." }
                              route: { cluster: grpc_backend }
                            - match: { prefix: "/" }
                              route: { cluster: http_backend }
                    http_filters:
                      - name: envoy.filters.http.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                          inline_code: |
                            function get_current_time_iso8601_inbound()
                              local date = os.date("!%Y-%m-%dT%H:%M:%S")
                              local ms = math.floor((os.clock() % 1) * 1000)
                              local formatted_time = string.format("%s.%03dZ-INBOUND", date, ms)
                              return formatted_time
                            end

                            function envoy_on_request(request_handle)
                              local current_time = get_current_time_iso8601_inbound()
                              local request_time = request_handle:headers():get("x-request-time")
                                
                              local request_id = request_handle:headers():get("x-trace-id")

                              if request_id then
                                request_handle:headers():replace("x-request-time", request_time .. ", " .. current_time)
                                request_handle:logInfo("X-Trace-ID: " .. request_id)
                                request_handle:logInfo("X-Request-Time: " .. request_handle:headers():get("x-request-time"))
                              end
                            end

                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router


        - name: listener_outbound
          address:
            socket_address: { address: 0.0.0.0, port_value: 15103 }
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    stat_prefix: outbound
                    codec_type: AUTO
                    http2_protocol_options: {}
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: rbac_manager_service
                          domains: ["*"]
                          routes:
                            - match: { prefix: "/proto.RbacService" }
                              route: 
                                cluster: rbac_manager_service_cluster
                            - match: { prefix: "/proto.Deploy" }
                              route: 
                                cluster: deploy_manager_service_cluster
                            - match: { prefix: "/proto.TraceService" }
                              route: 
                                cluster: trace_manager_service_cluster
                    http_filters:
                      - name: envoy.filters.http.lua
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                          inline_code: |
                            function get_current_time_iso8601_outbound()
                              local date = os.date("!%Y-%m-%dT%H:%M:%S")
                              local ms = math.floor((os.clock() % 1) * 1000)
                              local formatted_time = string.format("%s.%03dZ-OUTBOUND", date, ms)
                              return formatted_time
                            end

                            function envoy_on_request(request_handle)
                              local current_time = get_current_time_iso8601_outbound()
                              local request_time = request_handle:headers():get("x-request-time")
                                
                              local request_id = request_handle:headers():get("x-trace-id")

                              if request_id then
                                request_handle:headers():replace("x-request-time", request_time .. ", " .. current_time)
                                request_handle:logInfo("X-Trace-ID: " .. request_id)
                                request_handle:logInfo("X-Request-Time: " .. request_handle:headers():get("x-request-time"))
                              end
                            end

                            function envoy_on_response(response_handle)
                              local current_time = get_current_time_iso8601_outbound()
                              response_handle:headers():add("x-response-time", current_time)

                              local request_id = response_handle:headers():get("x-trace-id")
                              if request_id then
                                response_handle:logInfo("X-Trace-ID: " .. request_id)
                                response_handle:logInfo("X-Response-Time: " .. current_time)
                              end
                            end

                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
        - name: http_backend
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          load_assignment:
            cluster_name: http_backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: localhost
                          port_value: 5103

        - name: grpc_backend
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          http2_protocol_options: {}
          load_assignment:
            cluster_name: grpc_backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: localhost
                          port_value: 5103

        - name: rbac_manager_service_cluster
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          http2_protocol_options: {}
          load_assignment:
            cluster_name: rbac_manager_service_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: home-idp-rbac-manager
                          port_value: 5103

        - name: deploy_manager_service_cluster
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          http2_protocol_options: {}
          load_assignment:
            cluster_name: deploy_manager_service_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: home-idp-deploy-manager
                          port_value: 5103

        - name: trace_manager_service_cluster
          connect_timeout: 0.25s
          type: LOGICAL_DNS
          lb_policy: ROUND_ROBIN
          http2_protocol_options: {}
          load_assignment:
            cluster_name: trace_manager_service_cluster
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: home-idp-trace-manager
                          port_value: 5103

    admin:
      access_log_path: "/tmp/admin_access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 20000